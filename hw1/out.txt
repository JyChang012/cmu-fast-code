throughput_simd_add.1.c:8:5: warning: missing terminating " character [enabled by default]
     "vaddpd %[rsrc1], %[rsrc2], %[rdest]
     ^
throughput_simd_add.1.c:9:1: error: expected identifier or ‘(’ before string constant
 "\
 ^
throughput_simd_add.1.c:11:35: warning: missing terminating " character [enabled by default]
     :[rsrc1] "x"(dest), [rsrc2] "x"(src) \
                                   ^
throughput_simd_add.1.c:9:1: error: missing terminating " character
 "\
 ^
throughput_simd_add.1.c: In function ‘throughput’:
throughput_simd_add.1.c:40:9: warning: implicit declaration of function ‘rdtsc’ [-Wimplicit-function-declaration]
         t0 = rdtsc();
         ^
throughput_simd_add.1.c:41:9: error: missing terminating " character
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: expected string literal before ‘__asm__’
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:7:1: error: missing terminating " character
 __asm__ __volatile__ ( \
 ^
throughput_simd_add.1.c:15:50: note: in expansion of macro ‘D256_ADD’
 #define CHAINS(dest, src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) D256_ADD(dest[0], src) 
                                                  ^
throughput_simd_add.1.c:41:9: note: in expansion of macro ‘CHAINS’
         CHAINS(x, a);
         ^
throughput_simd_add.1.c:65:1: error: expected declaration or statement at end of input
 }
 ^
throughput_simd_add.1.c:65:1: error: expected declaration or statement at end of input
throughput_simd_add.1.c:37:24: warning: unused variable ‘sum’ [-Wunused-variable]
     unsigned long long sum = 0;
                        ^
throughput_simd_add.1.c:36:13: warning: unused variable ‘a’ [-Wunused-variable]
     __m256d a = _mm256_broadcast_sd(&constant);
             ^
throughput_simd_add.1.c:33:13: warning: variable ‘x’ set but not used [-Wunused-but-set-variable]
     __m256d x[N_CHAINS], xx = _mm256_broadcast_sd(&seed);
             ^
throughput_simd_add.1.c:32:28: warning: unused variable ‘t1’ [-Wunused-variable]
     unsigned long long t0, t1;
                            ^
throughput_simd_add.1.c:32:24: warning: variable ‘t0’ set but not used [-Wunused-but-set-variable]
     unsigned long long t0, t1;
                        ^
sh: throughput_simd_add.1.x: command not found
